<?xml version="1.0"?>
<!-- Additional Information about the 4-Wheeled Robot -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
<!--Everything is described here -->
<!-- http://classic.gazebosim.org/tutorials?tut=ros_urdf&cat=connect_ros -->
<!--mu1 and mu2 are friction coefficients -->

<gazebo reference="base_link">
    <material>Gazebo/Red</material>
    <mu1 value="0.3"/>
    <mu2 value="0.3"/>
</gazebo>

<gazebo reference="wheel1_link">
    <material>Gazebo/Yellow</material>
    <mu1 value="0.3"/>
    <mu2 value="0.3"/>
</gazebo>

<gazebo reference="wheel2_link">
    <material>Gazebo/Yellow</material>
    <mu1 value="0.3"/>
    <mu2 value="0.3"/>
</gazebo>

<gazebo reference="wheel3_link">
    <material>Gazebo/Yellow</material>
    <mu1 value="0.01"/>
    <mu2 value="0.01"/>
</gazebo>

<gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
  
      <!-- Plugin update rate in Hz -->
      <updateRate>100.0</updateRate>
  
      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>wheel2_joint</leftJoint>
  
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>wheel1_joint</rightJoint>
  
      <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
      <wheelSeparation>${base_link_y_dim + wheel_link_length}</wheelSeparation>
  
      <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
      <wheelDiameter>${2 * wheel_link_radius}</wheelDiameter>
  
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>1.0</wheelAcceleration>
  
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>20</wheelTorque>
  
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>cmd_vel</commandTopic>
  
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>odom</odometryTopic>
  
      <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>odom</odometryFrame>
  
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robotBaseFrame>base_link</robotBaseFrame>
  
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>0</odometrySource>
  
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>true</publishWheelTF>
  
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdom>true</publishOdom>
  
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>true</publishWheelJointState>
  
    </plugin>
  </gazebo>
</robot>